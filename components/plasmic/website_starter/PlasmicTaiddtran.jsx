// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: MroyaMVHnDxb5Kwefw95q
// Component: F0KtAPovJT98
import * as React from "react";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import { CartComponent } from "@plasmicpkgs/commerce";
import TextInput from "../../TextInput"; // plasmic-import: vzCJyFzjnXyO/component
import Button from "../../Button"; // plasmic-import: HnwECN7IsF7o/component
import { useScreenVariants as useScreenVariantsobvOd33Jfsbd } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: obvOd33JFSBD/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_website_starter.module.css"; // plasmic-import: MroyaMVHnDxb5Kwefw95q/projectcss
import sty from "./PlasmicTaiddtran.module.css"; // plasmic-import: F0KtAPovJT98/css
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: h9YldjRI7weL/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2"; // plasmic-import: 2lzB-aN9Ovtr/icon
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: xMlyZn53BWhR/icon
import Icon4Icon from "./icons/PlasmicIcon__Icon4"; // plasmic-import: -YKhTDZn0B0U/icon
import SearchsvgIcon from "./icons/PlasmicIcon__Searchsvg"; // plasmic-import: BjHcCev1Qt6p/icon
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: lzIBmoUTtA-m/icon
import Icon5Icon from "./icons/PlasmicIcon__Icon5"; // plasmic-import: GOK6ii8cETUd/icon
import Icon6Icon from "./icons/PlasmicIcon__Icon6"; // plasmic-import: KJlZcwD4Za2s/icon
import Icon7Icon from "./icons/PlasmicIcon__Icon7"; // plasmic-import: fBm21yw4zuqd/icon

createPlasmicElementProxy;

export const PlasmicTaiddtran__VariantProps = new Array();

export const PlasmicTaiddtran__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicTaiddtran__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = ph.useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = p.useCurrentUser?.() || {};
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsobvOd33Jfsbd()
  });
  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__pVZG)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__rk9Yx)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___8CxEb)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__c3EEy
                  )}
                >
                  {"Get 55% off Lorem Ipsum enough lorem discount"}
                </div>
              </p.Stack>
              {false ? (
                <div
                  className={classNames(projectcss.all, sty.freeBox___9UiTq)}
                >
                  <button
                    className={classNames(
                      projectcss.all,
                      projectcss.button,
                      projectcss.__wab_text,
                      sty.button__ayyUs
                    )}
                  >
                    {"Sign up"}
                  </button>
                  <p.Stack
                    as={p.PlasmicLink}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__gx7Ep
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__cyvmr)}
                        role={"img"}
                      />
                    ) : null}
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__k6Oar
                      )}
                    >
                      {"Log in"}
                    </div>
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__zIh3Y)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>
                </div>
              ) : null}
            </p.Stack>
          </p.Stack>
          <div className={classNames(projectcss.all, sty.freeBox__cnCcw)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__hfqyy)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__c5ZUk)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___0KMjz
                  )}
                >
                  {"LOGO"}
                </div>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__jkN5R)}
                >
                  <p.Stack
                    as={p.PlasmicLink}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__qSvyo
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__u7Ev)}
                        role={"img"}
                      />
                    ) : null}
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qj9Fn
                      )}
                    >
                      {"shop"}
                    </div>
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__lrgc9)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>
                  <p.Stack
                    as={p.PlasmicLink}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__wi4Gb
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__fb3Rp)}
                        role={"img"}
                      />
                    ) : null}
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dqkL
                      )}
                    >
                      {"The Academy"}
                    </div>
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg___1MAb)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>
                  <p.Stack
                    as={p.PlasmicLink}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__vx4XF
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__zfzLn)}
                        role={"img"}
                      />
                    ) : null}
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xPdGc
                      )}
                    >
                      {"About"}
                    </div>
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__clBo6)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>
                  <p.Stack
                    as={p.PlasmicLink}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__gkqTq
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__rVa76)}
                        role={"img"}
                      />
                    ) : null}
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hm9RJ
                      )}
                    >
                      {"Help"}
                    </div>
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__hZgzh)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__vgZPz)}
                >
                  <p.Stack
                    as={p.PlasmicLink}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___0R4L1
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__xnlGd)}
                        role={"img"}
                      />
                    ) : null}
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__eS7U)}
                    >
                      <Icon2Icon
                        className={classNames(projectcss.all, sty.svg__mRyvL)}
                        role={"img"}
                      />

                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__k5PX)}
                        role={"img"}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___0SQv6
                        )}
                      >
                        <Icon4Icon
                          className={classNames(projectcss.all, sty.svg__hmtJ)}
                          role={"img"}
                        />

                        <CartComponent
                          data-plasmic-name={"cart"}
                          data-plasmic-override={overrides.cart}
                          className={classNames("__wab_instance", sty.cart)}
                          field={"Size"}
                          hideIfIsEmpty={true}
                        />
                      </div>
                    </p.Stack>
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__yl8QK)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>
                </p.Stack>
                {false ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__xxlaX)}
                  >
                    <button
                      className={classNames(
                        projectcss.all,
                        projectcss.button,
                        projectcss.__wab_text,
                        sty.button__wmTzG
                      )}
                    >
                      {"Sign up"}
                    </button>
                    <p.Stack
                      as={p.PlasmicLink}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link___4PzQ2
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {false ? (
                        <IconIcon
                          className={classNames(projectcss.all, sty.svg__vaf0B)}
                          role={"img"}
                        />
                      ) : null}
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__j1Nih
                        )}
                      >
                        {"Log in"}
                      </div>
                      {false ? (
                        <IconIcon
                          className={classNames(projectcss.all, sty.svg__yeX1S)}
                          role={"img"}
                        />
                      ) : null}
                    </p.Stack>
                  </div>
                ) : null}
              </p.Stack>
            </p.Stack>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__e9AKt)}>
            <div className={classNames(projectcss.all, sty.freeBox__thCzu)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__z3C2V)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__rtO0R)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__adhbE
                    )}
                  >
                    {"The Academy"}
                  </h2>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__qdz
                    )}
                  >
                    {
                      "Origin offers several courses for all coffeelovers. Check our courses\nand events."
                    }
                  </div>
                </p.Stack>
              </p.Stack>
              <div className={classNames(projectcss.all, sty.columns__xWljI)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__c6VM)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__bqRgm
                    )}
                  >
                    {"Barista level 1"}
                  </h2>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___0O59D
                    )}
                  >
                    {
                      "Whether at home or at work, your coffee will never be the same. Come and learn our brand new course tailored to any coffee lover."
                    }
                  </div>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__phpUu
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {"Course details"}
                  </p.PlasmicLink>
                </p.Stack>
                <div className={classNames(projectcss.all, sty.column___9NvJr)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__ag50I)}
                    displayHeight={"100%"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/website_starter/images/image.jpg",
                      fullWidth: 1920,
                      fullHeight: 1280,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </div>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__ymNqm)}>
            <div className={classNames(projectcss.all, sty.freeBox___31Ynb)}>
              <div className={classNames(projectcss.all, sty.columns__tOfFx)}>
                <div className={classNames(projectcss.all, sty.column__qX1T)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__aA8QQ)}
                    displayHeight={"100%"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/website_starter/images/image2.jpg",
                      fullWidth: 1920,
                      fullHeight: 1260,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__rVbfW)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__zl0Zd
                    )}
                  >
                    {"Latte art classes"}
                  </h2>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cnYb6
                    )}
                  >
                    {
                      "The latte art course for Insta-worthy cups. Get tips and techniques to help you refine and perfect hearts, rosettas and tulips."
                    }
                  </div>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__nPqVb
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {"View course"}
                  </p.PlasmicLink>
                </p.Stack>
              </div>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__tz9KB)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__dkhjc)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__utiM)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__nmdiw)}>
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2___9UPmR
                    )}
                  >
                    {"Events"}
                  </h2>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wE3Zn
                    )}
                  >
                    {
                      "We hold cupping and coffee meetups every Thursday at 4pm.\nWe also offer food tastings sponsored by local businesses."
                    }
                  </div>
                </div>
              </p.Stack>
            </p.Stack>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__diC)}>
            <div className={classNames(projectcss.all, sty.freeBox__wnbo7)}>
              <div className={classNames(projectcss.all, sty.columns__oQA3)}>
                <div className={classNames(projectcss.all, sty.column___29TaY)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__q32K)}
                    displayHeight={"100%"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/website_starter/images/image3.jpg",
                      fullWidth: 1920,
                      fullHeight: 1280,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__x6Xdq)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__qbr4Q)}
                    displayHeight={"100%"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/website_starter/images/image4.jpg",
                      fullWidth: 1920,
                      fullHeight: 1280,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </div>
            </div>
          </div>
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox___1UvH3)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__rf0Mg)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__zXp32)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__v9Cd)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wQqji
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "Contact us\n"
                      : "Contact us\n"}
                  </div>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__h4Vp2
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "(555) 555-5555"
                      : "(555) 555-5555"}
                  </p.PlasmicLink>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__n60M1
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {"support@example.com"}
                  </p.PlasmicLink>
                </div>
              </p.Stack>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__kgiJw)}
              >
                <p.PlasmicLink
                  data-plasmic-name={"_3"}
                  data-plasmic-override={overrides._3}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty._3
                  )}
                  component={Link}
                  href={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "#"
                      : undefined
                  }
                  platform={"nextjs"}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "Shop"
                    : "Shop"}
                </p.PlasmicLink>
                <p.PlasmicLink
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__kUsHi
                  )}
                  component={Link}
                  platform={"nextjs"}
                >
                  {"The Academy"}
                </p.PlasmicLink>
                <p.PlasmicLink
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__boAbm
                  )}
                  component={Link}
                  platform={"nextjs"}
                >
                  {"About"}
                </p.PlasmicLink>
                <p.PlasmicLink
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__q46R3
                  )}
                  component={Link}
                  platform={"nextjs"}
                >
                  {"Help"}
                </p.PlasmicLink>
              </p.Stack>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__lhK3)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__qp5Ph
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "Email newsletter"
                    : "Email newsletter"}
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__vxzlt)}>
                  <TextInput
                    data-plasmic-name={"textInput"}
                    data-plasmic-override={overrides.textInput}
                    className={classNames("__wab_instance", sty.textInput)}
                    endIcon={
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__wjiaW
                        )}
                        endIcon={
                          <ChecksvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__jJUyW
                            )}
                            role={"img"}
                          />
                        }
                        startIcon={
                          <ChecksvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__t0Vy
                            )}
                            role={"img"}
                          />
                        }
                        submitsForm={true}
                      >
                        <Icon5Icon
                          className={classNames(projectcss.all, sty.svg__hdVn1)}
                          role={"img"}
                        />
                      </Button>
                    }
                    placeholder={"E-mail"}
                    showEndIcon={true}
                    startIcon={
                      <SearchsvgIcon
                        className={classNames(projectcss.all, sty.svg__bvbEm)}
                        role={"img"}
                      />
                    }
                  />
                </div>
              </p.Stack>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__i7Mb1)}
              >
                <p.Stack
                  as={p.PlasmicLink}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link___1UrTl
                  )}
                  component={Link}
                  platform={"nextjs"}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__tmrhj)}
                      role={"img"}
                    />
                  ) : null}
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__fIomk)}
                  >
                    <p.PlasmicIcon
                      PlasmicIconType={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? Icon6Icon
                          : Icon6Icon
                      }
                      className={classNames(projectcss.all, sty.svg___2EdhP)}
                      role={"img"}
                    />

                    <Icon3Icon
                      className={classNames(projectcss.all, sty.svg__v0PjQ)}
                      role={"img"}
                    />

                    <p.PlasmicIcon
                      PlasmicIconType={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? Icon7Icon
                          : Icon7Icon
                      }
                      className={classNames(projectcss.all, sty.svg__rUzxE)}
                      role={"img"}
                    />
                  </p.Stack>
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__f4Zf2)}
                      role={"img"}
                    />
                  ) : null}
                </p.Stack>
              </p.Stack>
              {false ? (
                <div className={classNames(projectcss.all, sty.freeBox__jqO3K)}>
                  <button
                    className={classNames(
                      projectcss.all,
                      projectcss.button,
                      projectcss.__wab_text,
                      sty.button__w8B0M
                    )}
                  >
                    {"Sign up"}
                  </button>
                  <p.Stack
                    as={p.PlasmicLink}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__dpFu5
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__tZzr)}
                        role={"img"}
                      />
                    ) : null}
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wt2Dg
                      )}
                    >
                      {"Log in"}
                    </div>
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__qjuHh)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>
                </div>
              ) : null}
            </p.Stack>
            <div className={classNames(projectcss.all, sty.freeBox___8MsB)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___9W5AK)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__sYHj)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__aAoP6)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__sqvY
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "(c) Company. All rights reserved. This site proudly built with"
                        : "\u00a9 Company. All rights reserved. This site proudly built with"}
                    </div>
                    <p.PlasmicLink
                      data-plasmic-name={"httpsstudioplasmicapp"}
                      data-plasmic-override={overrides.httpsstudioplasmicapp}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.httpsstudioplasmicapp
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? " Plasmic"
                        : " Plasmic"}
                    </p.PlasmicLink>
                  </div>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__gkJt)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__wwYLd)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__dKo9Q)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__z0EhR
                        )}
                      >
                        <p.Stack
                          as={p.PlasmicLink}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            sty.link__vSoQv
                          )}
                          component={Link}
                          platform={"nextjs"}
                        >
                          {false ? (
                            <IconIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__bKjdd
                              )}
                              role={"img"}
                            />
                          ) : null}
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___0IBs
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "shop"
                              : "Shipping & Returns"}
                          </div>
                          {false ? (
                            <IconIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__wFuS
                              )}
                              role={"img"}
                            />
                          ) : null}
                        </p.Stack>
                        <p.Stack
                          as={p.PlasmicLink}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            sty.link__duKck
                          )}
                          component={Link}
                          platform={"nextjs"}
                        >
                          {false ? (
                            <IconIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__w2Wxi
                              )}
                              role={"img"}
                            />
                          ) : null}
                          {false ? (
                            <IconIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__pwIpj
                              )}
                              role={"img"}
                            />
                          ) : null}
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__okrM
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "Privacy policy"
                              : "Privacy policy"}
                          </div>
                        </p.Stack>
                        <p.Stack
                          as={p.PlasmicLink}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            sty.link__vqJl
                          )}
                          component={Link}
                          platform={"nextjs"}
                        >
                          {false ? (
                            <IconIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__fdoNb
                              )}
                              role={"img"}
                            />
                          ) : null}
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__zBf40
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "Terms & Conditions"
                              : "Terms & Conditions"}
                          </div>
                          {false ? (
                            <IconIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__yRvlG
                              )}
                              role={"img"}
                            />
                          ) : null}
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </p.Stack>
            </div>
          </p.Stack>
        </p.Stack>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: ["root", "cart", "_3", "textInput", "textbox", "httpsstudioplasmicapp"],
  cart: ["cart"],
  _3: ["_3"],
  textInput: ["textInput", "textbox"],
  httpsstudioplasmicapp: ["httpsstudioplasmicapp"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicTaiddtran__ArgProps,
          internalVariantPropNames: PlasmicTaiddtran__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicTaiddtran__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicTaiddtran";
  } else {
    func.displayName = `PlasmicTaiddtran.${nodeName}`;
  }
  return func;
}

export const PlasmicTaiddtran = Object.assign(
  // Top-level PlasmicTaiddtran renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    cart: makeNodeComponent("cart"),
    _3: makeNodeComponent("_3"),
    textInput: makeNodeComponent("textInput"),
    httpsstudioplasmicapp: makeNodeComponent("httpsstudioplasmicapp"),
    // Metadata about props expected for PlasmicTaiddtran
    internalVariantProps: PlasmicTaiddtran__VariantProps,
    internalArgProps: PlasmicTaiddtran__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicTaiddtran;
/* prettier-ignore-end */
